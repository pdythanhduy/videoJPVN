# downloadytd.py
# -*- coding: utf-8 -*-
import subprocess
import sys
import shutil
import os
from pathlib import Path

# =============== C·∫§U H√åNH ===============
VIDEO_URL = "https://youtu.be/1dV0plXMO9Y?si=gy1dgwUtnuum1Jqv"  # ‚Üê ƒê·ªïi link t·∫°i ƒë√¢y
BASE_FILENAME = "youtube_audio"  # t√™n g·ªëc cho MP4/MP3 v√† ph·ª• ƒë·ªÅ
OUTPUT_DIR = "subs"              # th∆∞ m·ª•c ch·ª©a ph·ª• ƒë·ªÅ
LANG = "ja"                      # 'ja' (ti·∫øng Nh·∫≠t). N·∫øu c·∫ßn: 'vi', 'en', ...
MODEL = None                     # v√≠ d·ª• "large-v3" ho·∫∑c None ƒë·ªÉ d√πng m·∫∑c ƒë·ªãnh
BITRATE = "192k"                 # bitrate MP3 khi tr√≠ch t·ª´ video
MONO = False                     # True ƒë·ªÉ √©p mono (-ac 1); False gi·ªØ nguy√™n k√™nh

# =============== TI·ªÜN √çCH CHUNG ===============
def run(cmd):
    """Ch·∫°y l·ªánh v√† hi·ªÉn th·ªã r√µ r√†ng."""
    print(">", " ".join([str(c) for c in cmd]))
    subprocess.run(cmd, check=True)

def found(cmd_name):
    """Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n th·ª±c thi n·∫øu c√≥ trong PATH, ng∆∞·ª£c l·∫°i None."""
    return shutil.which(cmd_name)

def ensure(cmd_name, hint):
    """B·∫Øt bu·ªôc c√≥ c√¥ng c·ª•; b√°o ƒë∆∞·ªùng d·∫´n n·∫øu th·∫•y."""
    p = found(cmd_name)
    if not p:
        print(f"‚ùå Thi·∫øu '{cmd_name}'. {hint}")
        sys.exit(1)
    print(f"‚úÖ Found {cmd_name} at: {p}")
    return p

def resolve_whisper():
    """
    Tr·∫£ v·ªÅ m·∫£ng l·ªánh ƒë·ªÉ g·ªçi Whisper:
    - N·∫øu c√≥ 'whisper' trong PATH ‚Üí d√πng tr·ª±c ti·∫øp.
    - N·∫øu kh√¥ng ‚Üí d√πng Python hi·ªán t·∫°i: '<python> -m whisper'
    """
    exe = found("whisper")
    if exe:
        print(f"‚úÖ Found whisper at: {exe}")
        return [exe]
    print("‚ÑπÔ∏è  'whisper' kh√¥ng c√≥ trong PATH. D√πng fallback: 'py -m whisper' (ho·∫∑c sys.executable -m whisper).")
    py = sys.executable if sys.executable else "py"
    return [py, "-m", "whisper"]

# =============== MAIN ===============
def main():
    # ƒê∆∞·ªùng d·∫´n file
    video_file = f"{BASE_FILENAME}.mp4"
    audio_file = f"{BASE_FILENAME}.mp3"
    out_dir = Path(OUTPUT_DIR)
    out_dir.mkdir(parents=True, exist_ok=True)

    # 1) Ki·ªÉm tra c√¥ng c·ª• b·∫Øt bu·ªôc
    ensure("yt-dlp", "C√†i: pip install -U yt-dlp")
    ensure("ffmpeg", "Windows: winget install Gyan.FFmpeg (xong m·ªü l·∫°i PowerShell) | macOS: brew install ffmpeg")
    whisper_cmd = resolve_whisper()  # kh√¥ng b·∫Øt bu·ªôc c√≥ 'whisper' trong PATH

    # 2) T·∫£i VIDEO MP4 (best video + best audio) ‚Üí merge mp4
    print("üé¨ ƒêang t·∫£i VIDEO (MP4) b·∫±ng yt-dlp...")
    run([
        "yt-dlp",
        "-f", "bv*+ba/best",
        "--merge-output-format", "mp4",
        "-o", video_file,
        VIDEO_URL
    ])

    # 3) Tr√≠ch AUDIO MP3 t·ª´ ch√≠nh video (ƒë·∫£m b·∫£o ƒë·ªìng b·ªô timecode)
    print("üéµ ƒêang tr√≠ch audio MP3 t·ª´ video b·∫±ng ffmpeg...")
    ffmpeg_cmd = [
        "ffmpeg", "-y",
        "-i", video_file,
        "-vn",
        "-acodec", "libmp3lame",
        "-b:a", BITRATE,
    ]
    if MONO:
        ffmpeg_cmd += ["-ac", "1"]
    ffmpeg_cmd += [audio_file]
    run(ffmpeg_cmd)

    # 4) Ch·∫°y Whisper ‚Üí TXT/SRT/VTT
    print("üß† ƒêang ch·∫°y Whisper ƒë·ªÉ t·∫°o ph·ª• ƒë·ªÅ (txt/srt/vtt)...")
    base_args = [
        *whisper_cmd,
        audio_file,
        "--language", LANG,
        "--task", "transcribe",
        "--output_dir", str(out_dir),
    ]
    if MODEL:
        base_args += ["--model", MODEL]

    # G·ªçi 3 l·∫ßn ƒë·ªÉ t∆∞∆°ng th√≠ch m·ªçi b·∫£n whisper
    for fmt in ["txt", "srt", "vtt"]:
        run(base_args + ["--output_format", fmt])

    # 5) Ho√†n t·∫•t
    print("\n‚úÖ Ho√†n t·∫•t! File ƒë√£ t·∫°o:")
    print(f" - {video_file} (MP4)")
    print(f" - {audio_file} (MP3)")
    print(f" - {out_dir / (BASE_FILENAME + '.txt')}")
    print(f" - {out_dir / (BASE_FILENAME + '.srt')}")
    print(f" - {out_dir / (BASE_FILENAME + '.vtt')}")

if __name__ == "__main__":
    try:
        main()
    except subprocess.CalledProcessError as e:
        print("\nüí• L·ªói khi ch·∫°y l·ªánh:", e)
        print("‚Ä¢ Ki·ªÉm tra m·∫°ng (yt-dlp), quy·ªÅn ghi file, ho·∫∑c PATH c·ªßa ffmpeg/whisper.")
        print("‚Ä¢ V·ªõi Whisper: n·∫øu 'whisper' kh√¥ng c√≥ trong PATH, script ƒë√£ fallback sang 'py -m whisper'.")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è ƒê√£ h·ªßy theo y√™u c·∫ßu.")
        sys.exit(1)
